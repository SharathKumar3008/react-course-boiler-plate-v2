{"version":3,"sources":["firebase/firebase.js","components/LoginPage.js","actions/auth.js","components/ExpenseListItem.js","selectors/expenses.js","components/ExpenseList.js","actions/filters.js","components/DateRangePicker.js","components/ExpenseListFilters.js","selectors/expense-total.js","components/ExpensesSummary.js","components/ExpanseDashboardPage.js","components/SingleDatePicker.js","components/ExpenseForm.js","actions/expenses.js","components/AddExpansePage.js","components/EditExpansePage.js","components/NotFoundPage.js","components/Header.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/expenses.js","reducers/filters.js","reducers/auth.js","store/configureStore.js","components/LoadingPage.js","index.js"],"names":["require","config","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","googleAuthProvider","auth","GoogleAuthProvider","connect","undefined","dispatch","startLogin","signInWithPopup","className","onClick","ExpenseList","props","id","description","amount","createdAt","to","moment","format","numeral","selectExpenses","expenses","text","sortBy","startDate","endDate","filter","expense","createdAtMoment","startDateMatch","isSameOrBefore","endDateMatch","isSameOrAfter","textMatch","toLowerCase","includes","sort","a","b","state","filters","length","map","ExpenseListItem","setStartDate","type","setEndDate","DatePicker","onDateChange","setState","focusedInput","this","startDateId","endDateId","onDatesChange","onFocusChange","numberOfMonths","isOutsideRange","showClearDates","React","Component","ExpenseListFilters","placeholder","value","onChange","e","setTextFilter","target","selectExpenseTotal","reduce","acc","visibleExpense","expenseTotal","expenseCount","expenseWord","ExpanseDashboardPage","ReactdatesDatepicker","useState","date","setDate","isFocused","setIsFocused","focused","day","ExpenseForm","onDescriptionChange","onNotesChange","note","onAmountChange","match","onSubmit","preventDefault","error","parseFloat","valueOf","toString","calenderFocused","autoFocus","addExpense","removeExpense","expenseData","getState","uid","ref","push","then","key","startAddExense","history","find","params","console","log","updates","update","editExpense","remove","startRemoveExpense","NotFoundPage","startLogout","signOut","isAuthenticated","component","rest","createBrowserHistory","AppRouter","path","LoginPage","exact","AddExpansePage","EditExpansePage","expenseReducerDefaultState","expenseReducer","action","filterReducerDefaultState","startOf","endOf","filterReducer","authReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","configureStore","createStore","combineReducers","applyMiddleware","thunk","LoadingPage","src","store","jsx","hasRendered","renderApp","ReactDOM","render","document","getElementById","onAuthStateChanged","user","once","snapshot","forEach","childSnapShot","val","setExpenses","location","pathname"],"mappings":"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","file":"static/js/main.095d1e5d.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nrequire('dotenv').config();\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst database = firebase.database();\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nexport { firebase, googleAuthProvider, database as default };\n\n/*\ndatabase.ref('expenses').on('child_changed', (snapshot)=>{\n    console.log(snapshot.val());\n})*/","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { startLogin } from '../actions/auth';\n\nconst LoginPage = ({startLogin}) => (\n    <div className=\"box-layout\">\n        <div className=\"box-layout__box\">\n            <h1 className=\"box-layout__title\">Expensify</h1>\n            <p>It's time to get your expenses under control.</p>\n            <button className=\"button\" onClick={startLogin}>Login with Google</button>\n        </div>\n    </div>\n);\n\nconst mapDispatchToProps = (dispatch) => ({\n    startLogin : ()=> dispatch(startLogin())\n});\n\nexport default connect(undefined, mapDispatchToProps)(LoginPage);","import { firebase, googleAuthProvider } from '../firebase/firebase';\n\nexport const login = (uid) => ({\n    type : 'LOGIN',\n    uid\n});\n\nexport const startLogin = () => {\n    return () => {\n        return firebase.auth().signInWithPopup(googleAuthProvider);\n    }\n};\n\nexport const logout = () => ({\n    type : 'LOGOUT'\n});\n\nexport const startLogout = () => {\n    return () => {\n        return firebase.auth().signOut();\n    }\n};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport numeral from 'numeral';\n\nconst ExpenseList = ({ id, description, amount, createdAt}, props) => (\n    <Link className=\"list-item\" to={`/edit/${id}`}>\n        <div>\n            <h3 className=\"list-item__title\">{description}</h3>\n            <span className=\"list-item__subtitle\">{moment(createdAt).format('MMMM Do, YYYY')}</span>\n        </div>\n        <h3 className=\"list-item__data\">{numeral(amount/100).format('$0,0.00')}</h3>\n    </Link>\n);\n\nexport default ExpenseList;","import moment from 'moment';\n\nlet selectExpenses = (expenses, {text, sortBy, startDate, endDate}) => {\n    return expenses.filter((expense) => {\n        const createdAtMoment = moment(expense.createdAt);\n        const startDateMatch = startDate ? startDate.isSameOrBefore(createdAtMoment, 'day') : true;\n        const endDateMatch = endDate ? endDate.isSameOrAfter(createdAtMoment, 'day') : true;\n        const textMatch = expense.description.toLowerCase().includes(text.toLowerCase());\n\n        return startDateMatch && endDateMatch && textMatch;\n    }).sort((a, b) =>{\n        if(sortBy === 'date'){\n            return a.createdAt < b.createdAt ? 1 : -1;\n        } else if(sortBy === 'amount'){\n            return a.amount < b.amount ? 1 : -1;\n        }else{\n            return true;\n        }\n    });\n}\n\nexport default selectExpenses;","import React from 'react';\nimport { connect } from 'react-redux';\nimport ExpenseListItem from './ExpenseListItem';\nimport selectExpenses from '../selectors/expenses';\n\nconst ExpenseList = (props) => (\n    <div className=\"content-container\">\n        <div className=\"list-header\">\n            <div className=\"show-for-mobile\">Expenses</div>\n            <div className=\"show-for-desktop\">Expense</div>\n            <div className=\"show-for-desktop\">Amount</div>\n        </div>\n        <div className=\"list-body\">\n            { props.expenses.length ?\n                <div>\n                {\n                    props.expenses.map((expense)=> {\n                        return <ExpenseListItem key={expense.id} {...expense} />\n                    })\n                }\n                </div>\n                :\n                <div className=\"list-item list-item--message\">\n                    <span>No Expenses</span>\n                </div>\n            }\n        </div>\n    </div>\n);\n\nconst mapStateToProps = (state)=>{\n    return {\n        expenses : selectExpenses(state.expenses, state.filters)\n    }\n};\n\nexport default connect(mapStateToProps)(ExpenseList);","//SET_TEXT_FILTER\nexport const setTextFilter = (text = '') => ({\n    type : 'SET_TEXT_FILTER',\n    text\n});\n\n//SORT_BY_AMOUNT\nexport const sortByAmount = () => ({\n    type : 'SORT_BY_AMOUNT'\n});\n\n//SORT_BY_DATE\nexport const sortByDate = () => ({\n    type : 'SORT_BY_DATE'\n});\n\n//SET_START_DATE\nexport const setStartDate = ( startDate ) => ({\n    type : 'SET_START_DATE',\n    startDate\n});\n\n//SET_END_DATE\nexport const setEndDate = ( endDate ) => ({\n    type : 'SET_END_DATE',\n    endDate\n});","import React from \"react\";\nimport { DateRangePicker } from \"react-dates\";\n\nexport default class DatePicker extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            startDate : this.props.startDate,\n            endDate : this.props.endDate,\n            focusedInput : null\n        }\n    }\n    onDateChange = ({ startDate, endDate }) => {\n        //if(startDate && endDate) {\n            this.props.onDateChange(startDate, endDate);\n            return this.setState({ startDate, endDate });\n        //}\n    }\n    render() {\n        return (\n            <div>\n            <DateRangePicker\n              startDate={this.state.startDate}\n              startDateId=\"start_date_id\"\n              endDate={this.state.endDate}\n              endDateId=\"end_date_id\"\n              focusedInput={this.state.focusedInput}\n              onDatesChange={this.onDateChange}\n              onFocusChange={focusedInput => this.setState({ focusedInput })}\n              numberOfMonths={1}\n              isOutsideRange={()=> false}\n              showClearDates={true}\n            />\n            </div>\n          );\n    }\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { setTextFilter, sortByAmount, sortByDate, setStartDate, setEndDate } from '../actions/filters';\nimport DateRangePicker from './DateRangePicker';\n\nclass ExpenseListFilters extends React.Component {\n\n    onDateChange = (startDate, endDate) => {\n        this.props.dispatch(setStartDate(startDate));\n        this.props.dispatch(setEndDate(endDate));\n    }\n    render() {\n        return (\n            <div className=\"content-container\">\n                <div className=\"input-group\">\n                    <div className=\"input-group__item\">\n                        <input\n                            type=\"text\"\n                            className=\"text-input\"\n                            placeholder=\"Search expenses\"\n                            value={this.props.filters.text}\n                            onChange = {(e) => {\n                                this.props.dispatch(setTextFilter(e.target.value));\n                            }}\n                        />\n                    </div>\n                    <div className=\"input-group__item\">\n                        <select\n                            className=\"select\"\n                            value={this.props.filters.sortBy}\n                            onChange={(e)=> {\n                                if(e.target.value === 'amount'){\n                                    this.props.dispatch(sortByAmount());\n                                }else if(e.target.value === 'date'){\n                                    this.props.dispatch(sortByDate());\n                                }\n                            }}\n                        >\n                            <option value=\"date\">Date</option>\n                            <option value=\"amount\">Amount</option>\n                        </select>\n                    </div>\n                    <div className=\"input-group__item\">\n                        <DateRangePicker \n                            startDate={this.props.filters.startDate}\n                            endDate={this.props.filters.endDate}\n                            onDateChange={this.onDateChange}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    filters : state.filters\n})\n\nexport default connect(mapStateToProps)(ExpenseListFilters);","\nlet selectExpenseTotal = (expenses) => {\n    return  expenses\n                .map((expense)=> expense.amount)\n                .reduce((acc, amount)=> acc+amount, 0)\n}\n\nexport default selectExpenseTotal;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport selectExpenseTotal from '../selectors/expense-total';\nimport selectExpenses from '../selectors/expenses';\nimport numeral from 'numeral';\n\nconst ExpensesSummary = ({expenseCount, expenseTotal}) => {\n    const expenseWord = expenseCount === 1 ? 'expense' : 'expenses';\n    return (\n        <div className=\"page-header\">\n            <div className=\"content-container\">\n                <h1 className=\"page-header__title\">Viewing <span>{expenseCount}</span> {expenseWord} totalling <span>{numeral(expenseTotal/100).format('$0,0.00')}</span></h1>\n                <div className=\"page-header__actions\">\n                    <Link className=\"button\" to=\"/create\">Add Expense</Link>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nconst mapStateToProps = (state) => {\n    let visibleExpense = selectExpenses(state.expenses, state.filters);\n    return {\n        expenseTotal : selectExpenseTotal(visibleExpense),\n        expenseCount : visibleExpense.length\n    }\n}\n\nexport default connect(mapStateToProps)(ExpensesSummary);","import React from 'react';\nimport ExpenseList from './ExpenseList';\nimport ExpenseListFilters from './ExpenseListFilters';\nimport ExpensesSummary from './ExpensesSummary';\n\nconst ExpanseDashboardPage = () => (\n    <div>\n        <ExpensesSummary />\n        <ExpenseListFilters />\n        <ExpenseList />\n    </div>\n);\n\nexport default ExpanseDashboardPage;","import React, { useState } from \"react\";\nimport { SingleDatePicker } from \"react-dates\";\n\nexport default function ReactdatesDatepicker(props) {\n    const [date, setDate] = useState(props.createdAt);\n    const [isFocused, setIsFocused] = useState(false);\n  \n    function onDateChange(date) {\n      if(date){\n        props.onDateChange(date)\n        setDate(date);\n      }\n    }\n  \n    function onFocusChange({ focused }) {\n      setIsFocused(focused);\n    }\n  \n    return (\n      <SingleDatePicker\n        id=\"date_input\"\n        date={date}\n        focused={isFocused}\n        onDateChange={onDateChange}\n        onFocusChange={onFocusChange}\n        numberOfMonths={1}\n        isOutsideRange={(day)=> false}\n      />\n    );\n  }\n  ","import React from 'react';\nimport moment from 'moment';\nimport SingleDatePicker from './SingleDatePicker';\n\nexport default class ExpenseForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            description : props.expense ? props.expense.description : '',\n            note : props.expense ? props.expense.note : '',\n            amount : props.expense ? (props.expense.amount/100).toString() : '',\n            createdAt : props.expense ? moment(props.expense.createdAt) : moment(),\n            calenderFocused : false,\n            error : ''\n    \n        };\n    }\n\n    onDescriptionChange = (e) => {\n        const description = e.target.value;\n        this.setState(()=>({ description }));\n    };\n\n    onNotesChange = (e) => {\n        const note = e.target.value;\n        this.setState(()=>({ note }));\n    };\n\n    onAmountChange = (e) => {\n        const amount = e.target.value;\n        if(!amount || amount.match(/^\\d{1,}(\\.\\d{0,2})?$/)){\n            this.setState(()=>({ amount }));\n        }\n    }\n\n    onDateChange = (createdAt) => {\n        this.setState(()=>({ createdAt }));\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        if(!this.state.description || !this.state.amount){\n            this.setState(()=>({error: 'Please provide Description and Amount.'}));\n        }else{\n            this.setState(()=>({error: ''}));\n            this.props.onSubmit({\n                description : this.state.description,\n                amount : parseFloat(this.state.amount, 10) * 100,\n                createdAt : this.state.createdAt.valueOf(),\n                note : this.state.note\n            });\n        }\n    }\n\n    render() {\n        return (\n            <form className=\"form\" onSubmit={this.onSubmit}>\n                {this.state.error !== '' && <p className=\"form__error\">{this.state.error}</p>}\n                <input\n                    type=\"text\"\n                    className=\"text-input\"\n                    value={this.state.description}\n                    onChange={this.onDescriptionChange}\n                    placeholder=\"description\"\n                    autoFocus\n                />\n                <input\n                    type=\"text\"\n                    className=\"text-input\"\n                    value={this.state.amount}\n                    onChange={this.onAmountChange}\n                    placeholder=\"amount\"\n                />\n                <SingleDatePicker\n                    onDateChange = {this.onDateChange}\n                    createdAt={this.state.createdAt || moment()}\n                />\n                <textarea\n                className=\"textarea\"\n                    placeholder=\"Add a Note for your Expense(Optional)\"\n                    value={this.state.note}\n                    onChange={this.onNotesChange}\n                >\n                </textarea>\n                <div>\n                    <button className=\"button\">Save Expense</button>\n                </div>\n            </form>\n        )\n    }\n}","//import { v4 as uuidv4 } from 'uuid';\nimport database from '../firebase/firebase';\n\n//ADD_EXPENSE\nexport const addExpense = (expense) => ({\n    type : 'ADD_EXPENSE',\n    expense\n});\n\nexport const startAddExense = (expenseData = {}) =>{\n    return (dispatch, getState) =>{\n        const uid = getState().auth.uid;\n        const {\n            description = '',\n            note = '',\n            amount = 0,\n            createdAt = 0\n        } = expenseData;\n\n        const expense = {description,note,amount,createdAt}\n\n        database.ref(`users/${uid}/expenses`).push(expense).then((ref)=>{\n            dispatch(addExpense({\n                id: ref.key,\n                ...expense\n            }));\n        })\n    };\n}\n\n//REMOVE_EXPENSE\nexport const removeExpense = ({id} = {}) => ({\n    type : 'REMOVE_EXPENSE',\n    id\n});\n\nexport const startRemoveExpense = ({id} = {}) => {\n    return (dispatch, getState) => {\n        const uid = getState().auth.uid;\n        return database.ref(`users/${uid}/expenses/${id}`).remove().then(()=>{\n            dispatch(removeExpense({id}));\n        });\n    }\n}\n\n//EDIT_EXPENSE\nexport const editExpense = (id, updates) => ({\n    type : 'EDIT_EXPENSE',\n    id, \n    updates\n});\n\nexport const startEditExpense = (id, updates) =>{\n    return (dispatch, getState) => {\n        const uid = getState().auth.uid;\n        return database.ref(`users/${uid}/expenses/${id}`).update({...updates}).then(()=>{\n            dispatch(editExpense(id, updates));\n        });\n    }\n}\n\nexport const setExpenses = (expenses) => ({\n    type : 'SET_EXPENSES',\n    expenses\n});\n\nexport const startSetExpense = () => {\n    return (dispatch, getState) => {\n        const uid = getState().auth.uid;\n        let expenses = [];\n        return database.ref(`users/${uid}/expenses`).once('value')\n        .then((snapshot)=>{\n            snapshot.forEach((childSnapShot)=>{\n                expenses.push({\n                    id : childSnapShot.key,\n                    ...childSnapShot.val()\n                });\n            });\n            dispatch(setExpenses(expenses));\n        });\n    }\n};","import React from 'react';\nimport ExpenseForm from './ExpenseForm';\nimport { connect } from 'react-redux';\nimport {startAddExense } from '../actions/expenses';\n\nconst AddExpansePage = (props) => (\n    <div>\n        <div className=\"page-header\">\n            <div className=\"content-container\">\n                <h1 className=\"page-header__title\">Add Expense</h1>\n            </div>\n        </div>\n        <div className=\"content-container\">\n            <ExpenseForm \n                onSubmit={(expense)=>{\n                    props.dispatch(startAddExense(expense));\n                    props.history.push('/');\n                }}\n            />\n        </div>\n    </div>\n);\n\nexport default connect()(AddExpansePage);","import React from 'react';\nimport { connect } from 'react-redux';\nimport ExpenseForm from './ExpenseForm';\nimport { startEditExpense, startRemoveExpense } from '../actions/expenses';\n\nconst EditExpansePage = (props) => {\n    console.log('props', props);\n    return (\n        <div>\n            <div className=\"page-header\">\n                <div className=\"content-container\">\n                    <h1 className=\"page-header__title\">Add Expense</h1>\n                </div>\n            </div>\n\n            <div className=\"content-container\">\n                <ExpenseForm \n                    expense = {props.expense}\n                    onSubmit={(expense)=>{\n                        console.log(expense);\n                        props.dispatch(startEditExpense(props.expense.id, expense));\n                        props.history.push('/');\n                    }}    \n                />\n                <button\n                    className=\"button button--secondary\"\n                    onClick={()=> {\n                        props.dispatch(startRemoveExpense({id: props.expense.id}));\n                        props.history.push('/');\n                        }\n                }>Remove Expense</button>\n            </div>\n        </div>\n    )\n};\n\nconst mapStateToProps = (state, props) => {\n    return {\n        expense : state.expenses.find((expense)=> expense.id === props.match.params.id)\n    };\n}\n\nexport default connect(mapStateToProps)(EditExpansePage);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFoundPage = () => (\n    <div>\n        404 Page - <Link to=\"/\">Go Home</Link>\n    </div>\n);\n\nexport default NotFoundPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { startLogout } from '../actions/auth';\n\nconst Header = ({ startLogout }) => (\n    <header className=\"header\">\n        <div className=\"content-container\">\n            <div className=\"header__content\">\n                <Link className=\"header__title\" to=\"/dashboard\">\n                    <h1>Expensify</h1>\n                </Link>\n                <button className=\"button button--link\" onClick={ startLogout }>Logout</button>\n            </div>\n        </div>\n    </header>\n);\n\nconst mapDispatchToProps = (dispatch) => ({\n    startLogout : () => dispatch(startLogout())\n});\n\nexport default connect(undefined, mapDispatchToProps)(Header);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport Header from '../components/Header';\n\nconst PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => (\n    <Route {...rest} component={(props)=> (\n        isAuthenticated ? (\n            <div>\n                <Header />\n                <Component {...props} />\n            </div>\n        ) : (\n            <Redirect to=\"/\" />\n        )\n    )} />\n)\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated : !!state.auth.uid\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => (\n    <Route {...rest} component={(props)=> (\n        isAuthenticated ? (\n            <Redirect to=\"/dashboard\" />\n        ) : (\n            <Component {...props} />\n        )\n    )} />\n)\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated : !!state.auth.uid\n});\n\nexport default connect(mapStateToProps)(PublicRoute);","import React from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport { createBrowserHistory } from \"history\";\n\nimport LoginPage from '../components/LoginPage';\nimport ExpanseDashboardPage from '../components/ExpanseDashboardPage';\nimport AddExpansePage from '../components/AddExpansePage';\nimport EditExpansePage from '../components/EditExpansePage';\nimport NotFoundPage from '../components/NotFoundPage';\nimport PrivateRoute from './PrivateRoute';\nimport PublicRoute from './PublicRoute';\n\nexport const history = createBrowserHistory();\n\nconst AppRouter = () => (\n    <Router history={history}>\n        <div>  \n            <Switch>\n                <PublicRoute path=\"/\" component={LoginPage} exact={true} />\n                <PrivateRoute path=\"/dashboard\" component={ExpanseDashboardPage} />\n                <PrivateRoute path=\"/create\" component={AddExpansePage} />\n                <PrivateRoute path=\"/edit/:id\" component={EditExpansePage} />\n                <Route component={NotFoundPage} />\n            </Switch>\n        </div>\n    </Router>\n);\n\nexport default AppRouter;","\n//Expense Reducer\nconst expenseReducerDefaultState = [];\n\nlet expenseReducer = (state = expenseReducerDefaultState, action) => {\n    switch (action.type) {\n        case 'ADD_EXPENSE' :\n            return [...state, action.expense];\n        case 'REMOVE_EXPENSE' :\n            return state.filter(({id}) => id !== action.id);\n        case 'EDIT_EXPENSE' :\n            return state.map((expense)=>{\n                if(expense.id === action.id){\n                    return {\n                        ...expense,\n                        ...action.updates\n                    }\n                }else{\n                    return expense;\n                }\n            })\n        case 'SET_EXPENSES' :\n            return action.expenses;\n        default :\n            return state;\n    }\n}\n\nexport default expenseReducer;","import moment from 'moment';\n\n//Filter Reducer\nconst filterReducerDefaultState = {\n    text : '',\n    sortBy : 'date',\n    startDate : moment().startOf('month'),\n    endDate : moment().endOf('month')\n};\n\nlet filterReducer = (state = filterReducerDefaultState, action) => {\n    switch (action.type) {\n        case 'SET_TEXT_FILTER' :\n            return {\n                ...state,\n                text : action.text\n            }\n        case 'SORT_BY_AMOUNT' :\n            return {\n                ...state,\n                sortBy : 'amount'\n            }\n        case 'SORT_BY_DATE' :\n            return {\n                ...state,\n                sortBy : 'date'\n            }\n        case 'SET_START_DATE' :\n            return {\n                ...state,\n                startDate : action.startDate\n            }\n        case 'SET_END_DATE' :\n            return {\n                ...state,\n                endDate : action.endDate\n            }\n        default :\n            return state;\n    }\n}\n\nexport default filterReducer;","const authReducer = (state = {}, action) => {\n    switch(action.type){\n        case 'LOGIN' :\n            return {\n                uid : action.uid\n            }\n        case 'LOGOUT' :\n            return {};\n        default :\n            return state;\n    }\n}\n\nexport default authReducer;","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport expenseReducer from '../reducers/expenses';\nimport filterReducer from '../reducers/filters';\nimport authReducer from '../reducers/auth';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nlet configureStore = () => {\n    const store = createStore(\n        combineReducers({\n            expenses : expenseReducer,\n            filters : filterReducer,\n            auth : authReducer\n        }),\n        composeEnhancers(applyMiddleware(thunk))\n    );\n\n    return store;\n}\n\nexport default configureStore;","import React from 'react';\n\nconst LoadingPage = () => (\n    <div className=\"loader\">\n        <img className=\"loader__image\" src=\"../images/loader.gif\" />\n    </div>\n);\n\nexport default LoadingPage;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport AppRouter, { history } from './routers/AppRouter';\nimport configureStore from './store/configureStore';\nimport { startSetExpense } from './actions/expenses';\nimport { login, logout } from './actions/auth'; \nimport { firebase } from './firebase/firebase';\nimport LoadingPage from './components/LoadingPage';\n\nimport 'normalize.css';\nimport \"react-dates/initialize\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport './styles/styles.scss';\n\nconst store = configureStore();\n\nconst jsx = (\n    <Provider store={store}>\n        <AppRouter />\n    </Provider>\n);\n\nlet hasRendered = false;\nconst renderApp = () => {\n    if(!hasRendered){\n        ReactDOM.render(jsx, document.getElementById('root'));\n        hasRendered = true;\n    }\n}\n\nReactDOM.render(<LoadingPage />, document.getElementById('root'));\n\nfirebase.auth().onAuthStateChanged((user)=>{\n    if(user){\n        console.log('uid', user.uid);\n        store.dispatch(login(user.uid));\n        store.dispatch(startSetExpense()).then(()=>{\n            renderApp();\n            if(history.location.pathname === '/'){\n                history.push('/dashboard');\n            }\n        });\n    }else {\n        store.dispatch(logout());\n        renderApp();\n        history.push('/');\n    }\n});"],"sourceRoot":""}